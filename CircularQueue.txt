

class CircularQueue{

int front;

int rear;

int size;


Integer[] arr;

public CircularQueue(int size){

arr=new Integer[size];

rear=-1;

this.size = size;

front=-1;

}


public void push(int elem) {


if(front==-1 && rear==-1) {

front++;

rear++;

arr[rear]=elem;

}

else if(front!=(rear+1)%size) {

System.out.println(elem);

rear=(rear+1)%size;

arr[rear]=elem;

}

else {

System.out.println("overflow");

} 

}

public int pop() {



int ans=arr[front];

if(front == rear) {

front=-1;

rear=-1;

}

else {

front++;

}


return ans;

}

public int front() {

if(front==-1) {

return -1;

}

return arr[front];

}



};







public class dsa {



public static void main(String[] args) {

// TODO Auto-generated method stub

CircularQueue cq = new CircularQueue(4);

cq.push(1);

cq.push(2);

cq.push(3);

cq.push(4);

System.out.println(cq.front());

cq.pop();

cq.pop();

System.out.println(cq.front());

cq.push(2);

cq.push(2);




}



}
